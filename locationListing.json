{
    "openapi": "3.0.0",
    "info": {
        "title": "Obenan - Swagger API Documentation",
        "version": "1.0.0",
        "description": "Obenan Apis with Swagger"
    },
    "servers": [
        {
            "url": "https://stagingapi.obenan.com/api/v2",
            "description": "Server URL"
        }
    ],
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/locationListings/{id}/attributes": {
            "get": {
                "summary": "Get Attributes of a Location",
                "description": "Retrieves attributes of a specific location by its ID.",
                "tags": [
                    "Location Listings Attributes"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to retrieve attributes for.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with business attributes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "parent": {
                                                        "type": "string",
                                                        "example": "attributes/offers_employment_during_crisis"
                                                    },
                                                    "valueType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "BOOL"
                                                        ],
                                                        "example": "BOOL"
                                                    },
                                                    "displayName": {
                                                        "type": "string",
                                                        "example": "Employs displaced individuals"
                                                    },
                                                    "groupDisplayName": {
                                                        "type": "string",
                                                        "example": "Emergency help"
                                                    },
                                                    "valueMetadata": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "value": {
                                                                    "type": "boolean",
                                                                    "example": true
                                                                },
                                                                "displayName": {
                                                                    "type": "string",
                                                                    "example": "Employs displaced individuals"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No location was found with this ID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No location was found with this ID"
                                        },
                                        "data": {
                                            "type": null,
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your are not logged in"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Error Details"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Add Attributes s to a Location Listing",
                "description": "Uploads media files and associates them with a specific location listing.",
                "tags": [
                    "Location Listings Attributes"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location listing where the attributes will be added.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "attributes": {
                                        "type": "array",
                                        "description": "List of attributes associated with the location.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The attribute name.",
                                                    "example": "attributes/has_parking_garage_free"
                                                },
                                                "valueType": {
                                                    "type": "string",
                                                    "description": "The type of the attribute value.",
                                                    "example": "BOOL"
                                                },
                                                "values": {
                                                    "type": "array",
                                                    "description": "The values associated with the attribute.",
                                                    "items": {
                                                        "type": "boolean"
                                                    },
                                                    "example": [
                                                        true
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated Successfully",
                                    "data": [
                                        {
                                            "acknowledged": true,
                                            "modifiedCount": 0,
                                            "upsertedId": null,
                                            "upsertedCount": 0,
                                            "matchedCount": 1
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "MediaConstant is not defined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/lodging/categories": {
            "get": {
                "summary": "Retrieves Lodging Categories.",
                "description": "Get Categories on which Lodging is enabled of a Location.",
                "tags": [
                    "Location Listings Lodging"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with a list of categories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "categories/gcid:hotel",
                                                "categories/gcid:extended_stay_hotel",
                                                "categories/gcid:resort_hotel",
                                                "categories/gcid:capsule_hotel",
                                                "categories/gcid:love_hotel",
                                                "categories/gcid:hostel",
                                                "categories/gcid:motel",
                                                "categories/gcid:resort_hotel",
                                                "categories/gcid:holiday_apartment_rental",
                                                "categories/gcid:lodge",
                                                "categories/gcid:camping_cabin",
                                                "categories/gcid:inn",
                                                "categories/gcid:guest_house",
                                                "categories/gcid:farm",
                                                "categories/gcid:religious_lodging",
                                                "categories/gcid:apartment_building",
                                                "categories/gcid:apartment_complex",
                                                "categories/gcid:apartment_rental_agency",
                                                "categories/gcid:bed_and_breakfast",
                                                "categories/gcid:chalet",
                                                "categories/gcid:cottage",
                                                "categories/gcid:villa",
                                                "categories/gcid:campground"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No location was found with this ID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No location was found with this ID"
                                        },
                                        "data": {
                                            "type": null,
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your are not logged in"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Error Details"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/lodging": {
            "put": {
                "summary": "Update to a Location Listing Lodging.",
                "description": "Update the Location Listing Lodging Properties.",
                "tags": [
                    "Location Listings Lodging"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location listing where the media will be added.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "property": {
                                        "type": "object",
                                        "properties": {
                                            "builtYear": {
                                                "type": "integer",
                                                "default": null
                                            },
                                            "lastRenovatedYear": {
                                                "type": "integer",
                                                "default": null
                                            },
                                            "roomsCount": {
                                                "type": "string",
                                                "default": null
                                            },
                                            "floorsCount": {
                                                "type": "string",
                                                "default": null
                                            }
                                        }
                                    },
                                    "services": {
                                        "type": "object",
                                        "properties": {
                                            "languagesSpoken": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "languageCode": {
                                                            "type": "string"
                                                        },
                                                        "spoken": {
                                                            "type": "boolean",
                                                            "enum": [
                                                                null,
                                                                true,
                                                                false
                                                            ]
                                                        }
                                                    }
                                                }
                                            },
                                            "frontDesk": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "twentyFourHourFrontDesk": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "concierge": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "elevator": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "baggageStorage": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "fullServiceLaundry": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "selfServiceLaundry": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "socialHour": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "wakeUpCalls": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "convenienceStore": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "giftShop": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "currencyExchange": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "policies": {
                                        "type": "object",
                                        "properties": {
                                            "paymentOptions": {
                                                "type": "object",
                                                "properties": {
                                                    "cash": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "cheque": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "creditCard": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "debitCard": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "mobileNfc": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "checkinTime": {
                                                "type": "object",
                                                "properties": {
                                                    "hours": {
                                                        "type": "string",
                                                        "default": null
                                                    },
                                                    "minutes": {
                                                        "type": "string",
                                                        "default": null
                                                    },
                                                    "seconds": {
                                                        "type": "string",
                                                        "default": null
                                                    },
                                                    "nanos": {
                                                        "type": "string",
                                                        "default": null
                                                    }
                                                }
                                            },
                                            "checkoutTime": {
                                                "type": "object",
                                                "properties": {
                                                    "hours": {
                                                        "type": "string",
                                                        "default": null
                                                    },
                                                    "minutes": {
                                                        "type": "string",
                                                        "default": null
                                                    },
                                                    "seconds": {
                                                        "type": "string",
                                                        "default": null
                                                    },
                                                    "nanos": {
                                                        "type": "string",
                                                        "default": null
                                                    }
                                                }
                                            },
                                            "kidsStayFree": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "maxKidsStayFreeCount": {
                                                "type": "string",
                                                "default": null
                                            },
                                            "maxChildAge": {
                                                "type": "string",
                                                "default": null
                                            },
                                            "smokeFreeProperty": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "allInclusiveAvailable": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "allInclusiveOnly": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "foodAndDrink": {
                                        "type": "object",
                                        "properties": {
                                            "roomService": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "twentyFourHourRoomService": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "restaurant": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "restaurantsCount": {
                                                "type": "string",
                                                "default": null
                                            },
                                            "tableService": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "buffet": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "dinnerBuffet": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "breakfastBuffet": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "breakfastAvailable": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "freeBreakfast": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "bar": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "vendingMachine": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "pools": {
                                        "type": "object",
                                        "properties": {
                                            "pool": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "poolsCount": {
                                                "type": "string",
                                                "default": null
                                            },
                                            "indoorPool": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "indoorPoolsCount": {
                                                "type": "string",
                                                "default": null
                                            },
                                            "outdoorPool": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "outdoorPoolsCount": {
                                                "type": "string",
                                                "default": null
                                            },
                                            "hotTub": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "waterslide": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "lazyRiver": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "adultPool": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "wadingPool": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "wavePool": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "waterPark": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "lifeguard": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "activities": {
                                        "type": "object",
                                        "properties": {
                                            "gameRoom": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "nightclub": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "casino": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "boutiqueStores": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "tennis": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "golf": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "horsebackRiding": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "snorkeling": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "scuba": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "waterSkiing": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "bicycleRental": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "freeBicycleRental": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "watercraftRental": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "freeWatercraftRental": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "beachAccess": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "privateBeach": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "beachFront": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "transportation": {
                                        "type": "object",
                                        "properties": {
                                            "transfer": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "airportShuttle": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "freeAirportShuttle": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "localShuttle": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "carRentalOnProperty": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "privateCarService": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "freePrivateCarService": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "families": {
                                        "type": "object",
                                        "properties": {
                                            "babysitting": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "kidsActivities": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "kidsClub": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "kidsFriendly": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "connectivity": {
                                        "type": "object",
                                        "properties": {
                                            "wifiAvailable": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "freeWifi": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "publicAreaWifiAvailable": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "publicInternetTerminal": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "business": {
                                        "type": "object",
                                        "properties": {
                                            "businessCenter": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "meetingRooms": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "meetingRoomsCount": {
                                                "type": "string",
                                                "default": "null"
                                            }
                                        }
                                    },
                                    "accessibility": {
                                        "type": "object",
                                        "properties": {
                                            "mobilityAccessible": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "mobilityAccessibleParking": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "mobilityAccessibleElevator": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "mobilityAccessiblePool": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "pets": {
                                        "type": "object",
                                        "properties": {
                                            "petsAllowed": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "petsAllowedFree": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "dogsAllowed": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "catsAllowed": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "parking": {
                                        "type": "object",
                                        "properties": {
                                            "parkingAvailable": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "freeParking": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "selfParkingAvailable": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "freeSelfParking": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "valetParkingAvailable": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "freeValetParking": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "electricCarChargingStations": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "housekeeping": {
                                        "type": "object",
                                        "properties": {
                                            "housekeepingAvailable": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "dailyHousekeeping": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            },
                                            "turndownService": {
                                                "type": "boolean",
                                                "enum": [
                                                    null,
                                                    true,
                                                    false
                                                ]
                                            }
                                        }
                                    },
                                    "healthAndSafety": {
                                        "type": "object",
                                        "properties": {
                                            "enhancedCleaning": {
                                                "type": "object",
                                                "properties": {
                                                    "commonAreasEnhancedCleaning": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "guestRoomsEnhancedCleaning": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "commercialGradeDisinfectantCleaning": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "employeesTrainedCleaningProcedures": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "employeesTrainedThoroughHandWashing": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "employeesWearProtectiveEquipment": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "increasedFoodSafety": {
                                                "type": "object",
                                                "properties": {
                                                    "foodPreparationAndServingAdditionalSafety": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "diningAreasAdditionalSanitation": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "individualPackagedMeals": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "disposableFlatware": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "singleUseFoodMenus": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "minimizedContact": {
                                                "type": "object",
                                                "properties": {
                                                    "noHighTouchItemsCommonAreas": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "noHighTouchItemsGuestRooms": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "digitalGuestRoomKeys": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "plasticKeycardsDisinfected": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "roomBookingsBuffer": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "housekeepingScheduledRequestOnly": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "contactlessCheckinCheckout": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "personalProtection": {
                                                "type": "object",
                                                "properties": {
                                                    "commonAreasOfferSanitizingItems": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "guestRoomHygieneKitsAvailable": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "protectiveEquipmentAvailable": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "faceMaskRequired": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "physicalDistancing": {
                                                "type": "object",
                                                "properties": {
                                                    "physicalDistancingRequired": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "safetyDividers": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "sharedAreasLimitedOccupancy": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "wellnessAreasHavePrivateSpaces": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "commonAreasPhysicalDistancingArranged": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "sustainability": {
                                        "type": "object",
                                        "properties": {
                                            "energyEfficiency": {
                                                "type": "object",
                                                "properties": {
                                                    "greenBuildingDesign": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "energyConservationProgram": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "independentOrganizationAuditsEnergyUse": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "carbonFreeEnergySources": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "energyEfficientHeatingAndCoolingSystems": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "energyEfficientLighting": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "energySavingThermostats": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "waterConservation": {
                                                "type": "object",
                                                "properties": {
                                                    "independentOrganizationAuditsWaterUse": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "waterSavingSinks": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "waterSavingToilets": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "waterSavingShowers": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "towelReuseProgram": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "linenReuseProgram": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "wasteReduction": {
                                                "type": "object",
                                                "properties": {
                                                    "recyclingProgram": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "foodWasteReductionProgram": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "donatesExcessFood": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "compostsExcessFood": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "soapDonationProgram": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "toiletryDonationProgram": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "safelyHandlesHazardousSubstances": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "sustainableSourcing": {
                                                "type": "object",
                                                "properties": {
                                                    "responsiblePurchasingPolicy": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "organicFoodAndBeverages": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "locallySourcedFoodAndBeverages": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "responsiblySourcesSeafood": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "sustainabilityCertifications": {
                                                "type": "object",
                                                "properties": {
                                                    "ecoCertifications": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "ecoCertificate": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "ECO_CERTIFICATE_UNSPECIFIED",
                                                                        "ISO14001",
                                                                        "ISO50001",
                                                                        "ASIAN_ECOTOURISM",
                                                                        "GREEN_GLOBE",
                                                                        "GREEN_KEY",
                                                                        "GREEN_TOURISM_ACTIVE",
                                                                        "TRAVELIFE",
                                                                        "UNITED_CERTIFICATION_SYSTEMS_LIMITED",
                                                                        "VIREO_SRL"
                                                                    ]
                                                                },
                                                                "awarded": {
                                                                    "type": "boolean",
                                                                    "enum": [
                                                                        null,
                                                                        true,
                                                                        false
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "breeamCertification": {
                                                        "type": "string",
                                                        "enum": [
                                                            "BREEAM_CERTIFICATION_UNSPECIFIED",
                                                            "NO_BREEAM_CERTIFICATION",
                                                            "BREEAM_PASS",
                                                            "BREEAM_GOOD",
                                                            "BREEAM_VERY_GOOD",
                                                            "BREEAM_EXCELLENT",
                                                            "BREEAM_OUTSTANDING"
                                                        ]
                                                    },
                                                    "leedCertification": {
                                                        "type": "string",
                                                        "enum": [
                                                            "LEED_CERTIFICATION_UNSPECIFIED",
                                                            "NO_LEED_CERTIFICATION",
                                                            "LEED_CERTIFIED",
                                                            "LEED_SILVER",
                                                            "LEED_GOLD",
                                                            "LEED_PLATINUM"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "commonLivingArea": {
                                        "type": "object",
                                        "properties": {
                                            "layout": {
                                                "type": "object",
                                                "properties": {
                                                    "livingAreaSqMeters": {
                                                        "type": "number"
                                                    },
                                                    "stairs": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "loft": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "nonSmoking": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "patio": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "balcony": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "features": {
                                                "type": "object",
                                                "properties": {
                                                    "privateBathroom": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "toilet": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "bidet": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "shower": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "bathtub": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "hairdryer": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "washer": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "dryer": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "ironingEquipment": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "universalPowerAdapters": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "airConditioning": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "heating": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "fireplace": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "tv": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "tvCasting": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "tvStreaming": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "payPerViewMovies": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "inunitSafe": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "electronicRoomKey": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "inunitWifiAvailable": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            },
                                            "eating": {
                                                "type": "object",
                                                "properties": {
                                                    "kitchenAvailable": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "refrigerator": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "dishwasher": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "stove": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "oven": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "cookware": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "sink": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "microwave": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "toaster": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "indoorGrill": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "outdoorGrill": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "minibar": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "snackbar": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "coffeeMaker": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "kettle": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "teaStation": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            null,
                                                            true,
                                                            false
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "guestUnits": {
                                        "type": "object",
                                        "properties": {
                                            "codes": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "label": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "features": {
                                                "type": "object",
                                                "properties": {
                                                    "views": {
                                                        "type": "object",
                                                        "properties": {
                                                            "ViewsFromUnit": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "beachView": {
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            null,
                                                                            true,
                                                                            false
                                                                        ]
                                                                    },
                                                                    "cityView": {
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            null,
                                                                            true,
                                                                            false
                                                                        ]
                                                                    },
                                                                    "gardenView": {
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            null,
                                                                            true,
                                                                            false
                                                                        ]
                                                                    },
                                                                    "lakeView": {
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            null,
                                                                            true,
                                                                            false
                                                                        ]
                                                                    },
                                                                    "landmarkView": {
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            null,
                                                                            true,
                                                                            false
                                                                        ]
                                                                    },
                                                                    "oceanView": {
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            null,
                                                                            true,
                                                                            false
                                                                        ]
                                                                    },
                                                                    "poolView": {
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            null,
                                                                            true,
                                                                            false
                                                                        ]
                                                                    },
                                                                    "valleyView": {
                                                                        "type": "boolean",
                                                                        "enum": [
                                                                            null,
                                                                            true,
                                                                            false
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "totalLivingAreas": {
                                                        "type": "object",
                                                        "properties": {
                                                            "LivingArea": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "layout": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "livingAreaSqMeters": {
                                                                                "type": "number"
                                                                            },
                                                                            "stairs": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            },
                                                                            "loft": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            },
                                                                            "nonSmoking": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            },
                                                                            "patio": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            },
                                                                            "balcony": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    "features": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "privateBathroom": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            },
                                                                            "toilet": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            },
                                                                            "bidet": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            },
                                                                            "shower": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            },
                                                                            "bathtub": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            },
                                                                            "hairdryer": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    null,
                                                                                    true,
                                                                                    false
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the description.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated Successfully",
                                    "data": [
                                        {
                                            "acknowledged": true,
                                            "modifiedCount": 0,
                                            "upsertedId": null,
                                            "upsertedCount": 0,
                                            "matchedCount": 1
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "MediaConstant is not defined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/media": {
            "get": {
                "summary": "Get Media by Location ID",
                "description": "Retrieves media files associated with a specific location listing.",
                "tags": [
                    "Location Listings Media"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location listing.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "description": "The category of media to get (e.g., TEAMS, ADDITIONAL).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "TEAMS,ADDITIONAL"
                    },
                    {
                        "in": "query",
                        "name": "orderBy",
                        "description": "The field by which to order the results.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "default": "ASC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string",
                                                        "example": "679087e15e8f0e8e1a17c019"
                                                    },
                                                    "mediaCount": {
                                                        "type": "integer",
                                                        "example": 223
                                                    },
                                                    "media": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "accounts/103457162060425964296/locations/8602950828227878708/media/AF1QipMFwJzO5STPGUhvntTftsW67IHZrrpXsfzyI7HO"
                                                                },
                                                                "sourceUrl": {
                                                                    "type": "string",
                                                                    "example": "https://obenan-files-upload-dev.s3.amazonaws.com/companies/127/files/Files-1736143860942.png"
                                                                },
                                                                "mediaFormat": {
                                                                    "type": "string",
                                                                    "example": "PHOTO"
                                                                },
                                                                "googleUrl": {
                                                                    "type": "string",
                                                                    "example": "https://lh3.googleusercontent.com/XP3uA_onEjyXQF3AUl8HELsnM2Aah08oNQpv0Gb6tpKHlf6516ut0tCvkh1VKwdMwkZHLN7XvJKr66IdrA=s0"
                                                                },
                                                                "thumbnailUrl": {
                                                                    "type": "string",
                                                                    "nullable": true,
                                                                    "example": null
                                                                },
                                                                "category": {
                                                                    "type": "string",
                                                                    "example": "ADDITIONAL"
                                                                },
                                                                "belongsToGoogle": {
                                                                    "type": "boolean",
                                                                    "example": true
                                                                },
                                                                "belongsToUberall": {
                                                                    "type": "boolean",
                                                                    "example": true
                                                                },
                                                                "isUploadedToGoogle": {
                                                                    "type": "boolean",
                                                                    "example": true
                                                                },
                                                                "isUploadedToUberall": {
                                                                    "type": "boolean",
                                                                    "example": false
                                                                },
                                                                "googleUploadError": {
                                                                    "type": "string",
                                                                    "nullable": true,
                                                                    "example": null
                                                                },
                                                                "isDeleted": {
                                                                    "type": "boolean",
                                                                    "example": false
                                                                },
                                                                "_id": {
                                                                    "type": "string",
                                                                    "example": "679087e15e8f0e8e1a17c01c"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "cannot read properties of undefined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{locationId}/media": {
            "post": {
                "summary": "Add Media to a Location Listing",
                "description": "Uploads media files and associates them with a specific location listing.",
                "tags": [
                    "Location Listings Media"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "locationId",
                        "description": "The ID of the location listing where the media will be added.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "images": {
                                        "type": "array",
                                        "description": "List of images to be uploaded.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "sourceUrl": {
                                                    "type": "string",
                                                    "description": "The URL of the media file.",
                                                    "example": "https://example.com/media.jpg"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "description": "The category of the media.",
                                                    "example": "COVER"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created Successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Created Successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "string",
                                                    "example": "67937b28486a1e23a7f13561"
                                                },
                                                "facebook": {
                                                    "type": "object",
                                                    "properties": {
                                                        "about": {
                                                            "type": "string",
                                                            "nullable": true,
                                                            "example": null
                                                        },
                                                        "email": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "example@example.com"
                                                            }
                                                        },
                                                        "updateMask": {
                                                            "type": "object",
                                                            "properties": {
                                                                "about": {
                                                                    "type": "boolean",
                                                                    "example": false
                                                                },
                                                                "location": {
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "MediaConstant is not defined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/media/{mediaId}": {
            "delete": {
                "summary": "Delete media from a location listing",
                "description": "Delete media from a location listing by single media ID or multiple media IDs (comma-separated) and also update the media on Uberall.",
                "tags": [
                    "Location Listings Media"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location from which media should be deleted.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "mediaId",
                        "description": "The ID of the media to delete. It can be a single ID or multiple comma-separated IDs.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media deleted successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Deleted Successfully",
                                    "data": {
                                        "acknowledged": true,
                                        "modifiedCount": 1,
                                        "upsertedId": null,
                                        "upsertedCount": 0,
                                        "matchedCount": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/images": {
            "patch": {
                "summary": "Update cover images of location",
                "description": "Updates the cover images associated with the location.",
                "tags": [
                    "Location Listings Media"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "coverImages": {
                                        "type": "array",
                                        "description": "Array of URLs pointing to the cover images.",
                                        "items": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "example": [
                                            "https://obenan-files-upload-dev.s3.amazonaws.com/companies/1/listings/coverImages/1685698677589.jpeg",
                                            "https://obenan-files-upload-dev.s3.amazonaws.com/companies/1/listings/coverImages/1685698677589.jpeg"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cover images updated successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated successfully",
                                    "data": {
                                        "acknowledged": true,
                                        "modifiedCount": 1,
                                        "upsertedId": null,
                                        "upsertedCount": 0,
                                        "matchedCount": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Invalid image URLs"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "An unexpected error occurred"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/uberAll": {
            "get": {
                "summary": "Get Uberall Location Listings",
                "description": "Fetches location listings from Uberall using the provided location ID.",
                "tags": [
                    "Location Listings UberAll"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the location to fetch listings for."
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "description": "Field to sort by (optional)."
                    },
                    {
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "required": false,
                        "description": "Order of sorting (asc for ascending, desc for descending). Defaults to asc if not provided."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved location listings.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "example": 139329716
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "NAVMII"
                                                    },
                                                    "typeName": {
                                                        "type": "string",
                                                        "example": "Navmii"
                                                    },
                                                    "claimStatus": {
                                                        "type": "string",
                                                        "example": "UNKNOWN"
                                                    },
                                                    "syncStatus": {
                                                        "type": "string",
                                                        "example": "NOT_FOUND"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "ACTIVE"
                                                    },
                                                    "mandatoryFields": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "example": []
                                                    },
                                                    "connectStatus": {
                                                        "type": "string",
                                                        "example": "NOT_NEEDED"
                                                    },
                                                    "syncCheckRules": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "example": []
                                                    },
                                                    "data": {
                                                        "type": "object",
                                                        "example": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request - Invalid ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid location ID"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access Denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not allowed to do this"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Location does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Location not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Request failed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/profile": {
            "patch": {
                "operationId": "updateLocationProfileById",
                "summary": "Update the profile for a single business location",
                "description": "Updates profile description, keywords and short description by location ID",
                "tags": [
                    "Location Listings"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "profile": {
                                        "type": "object",
                                        "description": "Contains the main descriptive content for the business profile",
                                        "properties": {
                                            "description": {
                                                "type": "string",
                                                "description": "The main, detailed business description. Also known as the 'long description' or 'business bio'.",
                                                "example": "Hello my name is Hamza, this is the updated description test56"
                                            }
                                        }
                                    },
                                    "keywords": {
                                        "type": "array",
                                        "description": "A list of keywords or tags associated with the location. Note: This will completely replace the existing list of keywords.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "luck",
                                            "best seller"
                                        ]
                                    },
                                    "shortDescription": {
                                        "type": "string",
                                        "description": "A brief, attention-grabbing summary of the business. Also known as a 'tagline' or 'snippet'. Often used in list views.",
                                        "example": "This is some short description to test it first time"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated Successfully",
                                    "data": {
                                        "acknowledged": true,
                                        "modifiedCount": 0,
                                        "upsertedId": null,
                                        "upsertedCount": 0,
                                        "matchedCount": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id",
                                    "data": null
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "status is undefined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}": {
            "patch": {
                "operationId": "updateLocationDetailsById",
                "summary": "Update core details of a single business location",
                "description": "Updates core details including business name (title), opening date, and auto-sync settings.",
                "tags": [
                    "Location Listings"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the company to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "autoSync": {
                                        "type": "boolean",
                                        "description": "The auto sync of the location.",
                                        "example": true
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "The title of the company.",
                                        "example": "obenan testing 123"
                                    },
                                    "storefrontAddress": {
                                        "type": "object",
                                        "properties": {
                                            "regionCode": {
                                                "type": "string",
                                                "example": "PK"
                                            },
                                            "languageCode": {
                                                "type": "string",
                                                "example": "en"
                                            },
                                            "postalCode": {
                                                "type": "string",
                                                "example": "54782"
                                            },
                                            "locality": {
                                                "type": "string",
                                                "example": "karachi"
                                            },
                                            "addressLines": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "example": [
                                                    "1"
                                                ]
                                            }
                                        }
                                    },
                                    "openInfo": {
                                        "type": "object",
                                        "properties": {
                                            "openingDate": {
                                                "type": "object",
                                                "properties": {
                                                    "year": {
                                                        "type": "integer",
                                                        "example": 2021
                                                    },
                                                    "month": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "day": {
                                                        "type": "integer",
                                                        "example": 14
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company details updated successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated successfully",
                                    "data": {
                                        "acknowledged": true,
                                        "modifiedCount": 0,
                                        "upsertedId": null,
                                        "upsertedCount": 0,
                                        "matchedCount": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "primary category is not defined"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "operationId": "getLocationById",
                "summary": "Get complete details for a single business location",
                "description": "Retrieves the complete data object for a specific business location, identified by its unique location ID. The returned object includes core details, profile information, address, and more.",
                "tags": [
                    "Location Listings"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fetch",
                        "description": "Fetch from the google and store the fresh copy of the location",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Success",
                                    "data": [
                                        {
                                            "_id": "67333a6d4b03eab7d6ae7e19",
                                            "facebook": {
                                                "updateMask": {
                                                    "about": false,
                                                    "location": false
                                                }
                                            },
                                            "google": {
                                                "updateMask": {
                                                    "lodging": false,
                                                    "name": false
                                                }
                                            }
                                        },
                                        {
                                            "_id": "12345abcde",
                                            "facebook": {
                                                "updateMask": {
                                                    "email": [],
                                                    "address": null
                                                }
                                            },
                                            "google": {
                                                "updateMask": {
                                                    "title": true,
                                                    "phoneNumbers": false
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "primary category is not defined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/keywords": {
            "get": {
                "operationId": "generateAiKeywordsForLocation",
                "summary": "Generate AI keyword suggestions for a location",
                "description": "Generates a list of relevant, SEO-friendly keyword suggestions for a specific location using an AI model (OpenAI).",
                "tags": [
                    "Location Listings"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Success",
                                    "data": {
                                        "keywords": [
                                            "Acrylic sheets Karachi",
                                            "Acrylic products Karachi",
                                            "Custom acrylic Karachi",
                                            "Acrylic display Karachi",
                                            "Acrylic furniture Karachi"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "constant is not defined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/labels": {
            "patch": {
                "operationId": "updateLocationLabelsAndServices",
                "summary": "Update a location's labels, services, and associated brands",
                "description": "This endpoint Updates the descriptive attributes for a specific location, including its labels, the services it offers, and the brands it carries. **IMPORTANT:** For array fields (`labels`, `services`, `brands`), providing a new array will **completely replace** the existing one. To clear all brands, for example, send an empty array: `\"brands\": []`. To add or remove a single item, you must fetch the current list, modify it, and send the entire new list back.\n",
                "tags": [
                    "Location Listings"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "labels": {
                                        "type": "array",
                                        "description": "List of labels associated with the location.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Good rated",
                                            "Bad seller"
                                        ]
                                    },
                                    "services": {
                                        "type": "array",
                                        "description": "List of services provided by the location.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Business planning"
                                        ]
                                    },
                                    "brands": {
                                        "type": "array",
                                        "description": "List of brands associated with the location.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Clothing"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company details updated successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated successfully",
                                    "data": {
                                        "acknowledged": true,
                                        "modifiedCount": 0,
                                        "upsertedId": null,
                                        "upsertedCount": 0,
                                        "matchedCount": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "label description is not defined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/hours": {
            "get": {
                "operationId": "getAvailableSpecialHourTypes",
                "summary": "Get the available types of special hours or more hours for a location",
                "description": "Retrieves a list of the *types* of special hours or more hours that can be configured for a specific location (e.g., 'Breakfast', 'Happy Hour', 'Drive-through'). The list of available hour types may depend on the location's primary business category (e.g., a restaurant will have different options than a retail store).",
                "tags": [
                    "Location Listings"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to get more hours for.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates the success of the request.",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A message explaining the result.",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "description": "A list of special hours types associated with the location.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "hoursTypeId": {
                                                        "type": "string",
                                                        "description": "The identifier for the hour type.",
                                                        "example": "BREAKFAST"
                                                    },
                                                    "displayName": {
                                                        "type": "string",
                                                        "description": "The display name for the hour type.",
                                                        "example": "Breakfast"
                                                    },
                                                    "localizedDisplayName": {
                                                        "type": "string",
                                                        "description": "The localized name for the hour type.",
                                                        "example": "Breakfast"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "primary category is not defined"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "operationId": "updateLocationRegularHours",
                "summary": "Update the regular weekly business hours for a location",
                "description": "This endpoint Updates the primary business status (e.g., OPEN) and the standard weekly operating hours for a specific location.**IMPORTANT:** The `regularHours.periods` array **completely replaces** the location's existing weekly schedule.- To mark a day as **closed**, simply omit it from the `periods` array.- To set **24-hour hours** for a day, use `openTime` of 00:00 and `closeTime` of 24:00 (or 00:00 on the next day).- To create a **split shift** (e.g., closed for lunch), provide two separate period objects for that day.\n",
                "tags": [
                    "Location Listings"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to update hours for.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "openInfo": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "description": "Indicates whether the location is open.",
                                                "example": "OPEN"
                                            }
                                        }
                                    },
                                    "regularHours": {
                                        "type": "object",
                                        "properties": {
                                            "periods": {
                                                "type": "array",
                                                "description": "A list of opening and closing periods for each day.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "openDay": {
                                                            "type": "string",
                                                            "description": "The day the location opens.",
                                                            "example": "MONDAY"
                                                        },
                                                        "openTime": {
                                                            "type": "object",
                                                            "properties": {
                                                                "hours": {
                                                                    "type": "integer",
                                                                    "description": "The opening hour (24-hour format).",
                                                                    "example": 9
                                                                },
                                                                "minutes": {
                                                                    "type": "integer",
                                                                    "description": "The opening minutes (optional).",
                                                                    "example": 0
                                                                }
                                                            }
                                                        },
                                                        "closeDay": {
                                                            "type": "string",
                                                            "description": "The day the location closes.",
                                                            "example": "MONDAY"
                                                        },
                                                        "closeTime": {
                                                            "type": "object",
                                                            "properties": {
                                                                "hours": {
                                                                    "type": "integer",
                                                                    "description": "The closing hour (24-hour format).",
                                                                    "example": 16
                                                                },
                                                                "minutes": {
                                                                    "type": "integer",
                                                                    "description": "The closing minutes (optional).",
                                                                    "example": 30
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated Successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates the success of the request.",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A message explaining the result.",
                                            "example": "Updated Successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "description": "update result.",
                                            "properties": {
                                                "acknowledged": {
                                                    "type": "boolean",
                                                    "description": "Whether the update was acknowledged by the database.",
                                                    "example": true
                                                },
                                                "modifiedCount": {
                                                    "type": "integer",
                                                    "description": "Number of documents modified.",
                                                    "example": 1
                                                },
                                                "upsertedId": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "description": "ID of the newly inserted document if upserted.",
                                                    "example": null
                                                },
                                                "upsertedCount": {
                                                    "type": "integer",
                                                    "description": "Number of documents upserted.",
                                                    "example": 1
                                                },
                                                "matchedCount": {
                                                    "type": "integer",
                                                    "description": "Number of documents matched by the filter.",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Invalid request body"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "setGoogleHours is not defined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/contacts": {
            "patch": {
                "operationId": "updateLocationContacts",
                "summary": "Update the contact information for a location",
                "description": "Updates the primary contact information for a specific location, including phone number, website, and email address.\nPlease ensure all data is correctly formatted:\n- **Phone Number:** Must be in E.164 international format (e.g., `+14155552671`).\n- **Website:** Must be a full, valid URI, including the scheme (e.g., `https://example.com`).\n- **Email:** Must be a valid email address format.\n",
                "tags": [
                    "Location Listings",
                    "Contact Information"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phoneNumbers": {
                                        "type": "object",
                                        "description": "Phone numbers of the location.",
                                        "properties": {
                                            "primaryPhone": {
                                                "type": "string",
                                                "description": "Primary phone number in international format.",
                                                "example": "+923135781684"
                                            }
                                        }
                                    },
                                    "websiteUri": {
                                        "type": "string",
                                        "description": "Website URI of the location.",
                                        "example": "https://www.google.com"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "Email associated with the location.",
                                        "example": "demo@obenan.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company Contact Details updated successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated successfully",
                                    "data": {
                                        "acknowledged": true,
                                        "modifiedCount": 0,
                                        "upsertedId": null,
                                        "upsertedCount": 0,
                                        "matchedCount": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "label description is not defined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/categories": {
            "patch": {
                "operationId": "updateLocationCategories",
                "summary": "Update the Google and Facebook business categories for a location",
                "description": "Updates the primary and additional categories for a location.\nUpdates the business categories for a specific location on different platforms (Google and Facebook). You can update one or both in a single call.\n**IMPORTANT:**\n- **Category IDs are required:** You must provide the unique, platform-specific category ID (e.g., `categories/gcid:restaurant_supply_store` for Google) for each category. The `displayName` is for reference and is often ignored by the API. There should be a separate discovery endpoint to find valid category IDs.\n- **Array Replacement:** Providing an array for `additionalCategories` (Google) or `category_list` (Facebook) will **completely replace** the existing list of categories on that platform. To clear categories, send an empty array.\n",
                "tags": [
                    "Location Listings Categories"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "google": {
                                        "type": "object",
                                        "description": "Google-specific category details.",
                                        "properties": {
                                            "primaryCategory": {
                                                "type": "object",
                                                "description": "Primary category of the location.",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Unique identifier for the primary category.",
                                                        "example": "categories/gcid:restaurant_supply_store"
                                                    },
                                                    "displayName": {
                                                        "type": "string",
                                                        "description": "Display name of the primary category.",
                                                        "example": "Restaurant supply store"
                                                    }
                                                }
                                            },
                                            "additionalCategories": {
                                                "type": "array",
                                                "description": "Additional categories for the location.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Unique identifier for the additional category.",
                                                            "example": "categories/gcid:abbey"
                                                        },
                                                        "displayName": {
                                                            "type": "string",
                                                            "description": "Display name of the additional category.",
                                                            "example": "Abbey"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "facebook": {
                                        "type": "object",
                                        "description": "Facebook-specific category details.",
                                        "properties": {
                                            "category_list": {
                                                "type": "array",
                                                "description": "List of categories associated with the location.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "Unique identifier for the category.",
                                                            "example": "1338477876584822"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name of the category.",
                                                            "example": "Marching band"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Categories updated successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated successfully",
                                    "data": {
                                        "acknowledged": true,
                                        "modifiedCount": 1,
                                        "upsertedId": null,
                                        "upsertedCount": 0,
                                        "matchedCount": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Invalid category format"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Unexpected server error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "operationId": "searchAvailableCategories",
                "summary": "Search and retrieves for available business categories",
                "description": "Retrieves Categories of a specific location by its ID.\nSearches the entire list of available business categories for Google and/or Facebook.\n",
                "tags": [
                    "Location Listings Categories",
                    "Search & Discovery"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to retrieve categories for.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "Type of categories could be google, facebook.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search term to filter categories by displayName.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "description": "The page number for pagination.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The number of results per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with business categories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data found Successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "google": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "categories/gcid:aadhar_center"
                                                            },
                                                            "displayName": {
                                                                "type": "string",
                                                                "example": "Aadhaar center"
                                                            }
                                                        }
                                                    }
                                                },
                                                "facebook": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Public figure"
                                                            },
                                                            "api_enum": {
                                                                "type": "string",
                                                                "example": "PERSON"
                                                            },
                                                            "id": {
                                                                "type": "string",
                                                                "example": "1602"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No location was found with this ID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No location was found with this ID"
                                        },
                                        "data": {
                                            "type": null,
                                            "example": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your are not logged in"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Error Details"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/details": {
            "patch": {
                "operationId": "updateLocationContacts",
                "summary": "Update the contact information for a location",
                "description": "Updates the primary contact information for a specific location, including phone number, website, and email address.\n",
                "tags": [
                    "Location Listings",
                    "Contact Information"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phoneNumbers": {
                                        "type": "object",
                                        "description": "Phone numbers of the location.",
                                        "properties": {
                                            "primaryPhone": {
                                                "type": "string",
                                                "description": "Primary phone number in international format.",
                                                "example": "+923135781684"
                                            }
                                        }
                                    },
                                    "websiteUri": {
                                        "type": "string",
                                        "description": "Website URI of the location.",
                                        "example": "https://www.google.com"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "Email associated with the location.",
                                        "example": "demo@obenan.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company Contact Details updated successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated successfully",
                                    "data": {
                                        "acknowledged": true,
                                        "modifiedCount": 0,
                                        "upsertedId": null,
                                        "upsertedCount": 0,
                                        "matchedCount": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "label description is not defined"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationListings/{id}/serviceAreas": {
            "operationId": "updateLocationServiceArea",
            "patch": {
                "summary": "Update the geographic service area for a location",
                "description": "This endpoint Updates the service area of a location, allowing object\n**IMPORTANT BEHAVIOR:**\n- **Replacement:** Sending a new `serviceArea` object will **completely replace** the existing service area definition.\n- **Removal:** To remove the service area entirely, send a `null` value for the `serviceArea` field: `{\"serviceArea\": null}`.\n- **Google Place IDs are Required:** You must provide the unique Google Place ID for each service area location. The `placeName` is for reference only. An external tool or another API should be used to find the `placeId` for a given city or region.\n",
                "tags": [
                    "Location Listings",
                    "Service Areas"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "serviceArea": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Service area details or null if not applicable.",
                                        "example": {
                                            "places": {
                                                "placeInfos": [
                                                    {
                                                        "placeId": "ChIJ2QeB5YMEGTkRYiR-zGy-OsI",
                                                        "placeName": "Faisalabad"
                                                    },
                                                    {
                                                        "placeId": "ChIJU0eVDuT9GDkReHoSeZ1j6rg",
                                                        "placeName": "Karachi"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service area updated successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Service area updated successfully",
                                    "data": {
                                        "acknowledged": true,
                                        "modifiedCount": 1,
                                        "upsertedId": null,
                                        "upsertedCount": 0,
                                        "matchedCount": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Location not found with this id"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locationLogs/address/{id}": {
            "post": {
                "summary": "Create a new location log",
                "description": "Logs the change of address for a company.",
                "tags": [
                    "Location Logs"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location log entry.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "companyId": {
                                        "type": "integer",
                                        "description": "The ID of the company associated with the address change.",
                                        "example": 1
                                    },
                                    "currentAddress": {
                                        "type": "object",
                                        "description": "The current address details.",
                                        "properties": {
                                            "regionCode": {
                                                "type": "string",
                                                "description": "Region code of the current address.",
                                                "example": "NL"
                                            },
                                            "postalCode": {
                                                "type": "string",
                                                "description": "Postal code of the current address.",
                                                "example": "1012 KL"
                                            },
                                            "locality": {
                                                "type": "string",
                                                "description": "Locality of the current address.",
                                                "example": "Amsterdam"
                                            },
                                            "addressLines": {
                                                "type": "array",
                                                "description": "Address lines of the current address.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "example": [
                                                    "rokin, 81",
                                                    "rokin, 82"
                                                ]
                                            }
                                        }
                                    },
                                    "newAddress": {
                                        "type": "object",
                                        "description": "The new address details.",
                                        "properties": {
                                            "regionCode": {
                                                "type": "string",
                                                "description": "Region code of the new address.",
                                                "example": "NL"
                                            },
                                            "postalCode": {
                                                "type": "string",
                                                "description": "Postal code of the new address.",
                                                "example": "1012 KL"
                                            },
                                            "locality": {
                                                "type": "string",
                                                "description": "Locality of the new address.",
                                                "example": "Amsterdam"
                                            },
                                            "addressLines": {
                                                "type": "array",
                                                "description": "Address lines of the new address.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "example": [
                                                    "rokin, 81",
                                                    "rokin, 82"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address log created successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Created successfully",
                                    "data": {
                                        "acknowledged": "true,",
                                        "insertedId": "67a0945959c43f67b0779751"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Already exists.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Request already pending"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Listing not found.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No listing found with this id"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "locationAdressLogs is not a function"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/{placeId}/place": {
            "get": {
                "summary": "Get Location Predictions or Details",
                "description": "Fetches location predictions based on a search term or retrieves place details using place ID.",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "placeId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "lah",
                        "description": "The input string for location search or place ID for fetching details."
                    },
                    {
                        "in": "query",
                        "name": "searchBy",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "name",
                        "description": "Search method - \"name\" for autocomplete predictions"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched location predictions or place details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "predictions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Lahore, Pakistan"
                                                            },
                                                            "place_id": {
                                                                "type": "string",
                                                                "example": "ChIJ2QeB5YMEGTkRYiR-zGy-OsI"
                                                            },
                                                            "reference": {
                                                                "type": "string",
                                                                "example": "ChIJ2QeB5YMEGTkRYiR-zGy-OsI"
                                                            },
                                                            "structured_formatting": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "main_text": {
                                                                        "type": "string",
                                                                        "example": "Lahore"
                                                                    },
                                                                    "secondary_text": {
                                                                        "type": "string",
                                                                        "example": "Pakistan"
                                                                    }
                                                                }
                                                            },
                                                            "terms": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "offset": {
                                                                            "type": "integer",
                                                                            "example": 0
                                                                        },
                                                                        "value": {
                                                                            "type": "string",
                                                                            "example": "Lahore"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "types": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "example": [
                                                                    "locality",
                                                                    "political",
                                                                    "geocode"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "OK"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Error",
                                    "data": null
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/brands": {
            "get": {
                "summary": "Get Unique Brand Names",
                "description": "Fetches a distinct list of brand names from the locations data.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved unique brand names.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "brandName": {
                                                        "type": "string",
                                                        "example": "qa,testing"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Data not found",
                                    "data": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/countries": {
            "get": {
                "summary": "Get Unique Country Names",
                "description": "Fetches a distinct list of country names along with their country codes from the locations data.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "connected",
                        "schema": {
                            "type": "boolean",
                            "enum": [
                                true,
                                false
                            ]
                        },
                        "description": "Filter by google connected."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved unique country names.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Pakistan"
                                                    },
                                                    "countryCode": {
                                                        "type": "string",
                                                        "example": "PK"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "status": true,
                                    "message": "Success",
                                    "data": [
                                        {
                                            "name": "Bangladesh",
                                            "countryCode": "BD"
                                        },
                                        {
                                            "name": "Brazil",
                                            "countryCode": "BR"
                                        },
                                        {
                                            "name": "Canada",
                                            "countryCode": "CA"
                                        },
                                        {
                                            "name": "China",
                                            "countryCode": "CN"
                                        },
                                        {
                                            "name": "India",
                                            "countryCode": "IN"
                                        },
                                        {
                                            "name": "Malaysia",
                                            "countryCode": "MY"
                                        },
                                        {
                                            "name": "Netherlands",
                                            "countryCode": "PK"
                                        },
                                        {
                                            "name": "Pakistan",
                                            "countryCode": "PK"
                                        },
                                        {
                                            "name": "Serbia",
                                            "countryCode": "RS"
                                        },
                                        {
                                            "name": "Thailand",
                                            "countryCode": "TH"
                                        },
                                        {
                                            "name": "United Arab Emirates",
                                            "countryCode": "AE"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Data not found",
                                    "data": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this resource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "summary": "Get Locations and Groups",
                "description": "Fetches locations and groups based on various filters such as search, brands, country codes, and groups.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Column to sort by (e.g., createdAt)."
                    },
                    {
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "description": "Sorting order (ASC or DESC)."
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "locations",
                                "groups",
                                "both"
                            ]
                        },
                        "description": "Type of data to fetch (locations, groups, or both)."
                    },
                    {
                        "in": "query",
                        "name": "brands",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by brand names (comma-separated)."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by status (comma-separated) approved,requested,requested"
                    },
                    {
                        "in": "query",
                        "name": "connected",
                        "schema": {
                            "type": "boolean",
                            "enum": [
                                true,
                                false
                            ]
                        },
                        "description": "Filter by google connected."
                    },
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The page number for pagination."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of results per page."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search keyword to filter locations."
                    },
                    {
                        "in": "query",
                        "name": "cities",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by cities comma separated."
                    },
                    {
                        "in": "query",
                        "name": "countryCode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by country code."
                    },
                    {
                        "in": "query",
                        "name": "groupId",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by Group ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved locations and groups.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "object",
                                                    "properties": {
                                                        "locations": {
                                                            "type": "integer",
                                                            "example": 0
                                                        },
                                                        "groups": {
                                                            "type": "integer",
                                                            "example": 3
                                                        }
                                                    }
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 275
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Hotel"
                                                            },
                                                            "deletedAt": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "example": null
                                                            },
                                                            "companyId": {
                                                                "type": "integer",
                                                                "example": 127
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-02T05:35:39.253Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-02T05:35:39.253Z"
                                                            },
                                                            "groups": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content found.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Data not found"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Invalid request"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have the access to this location"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Register a new location",
                "description": "Registers a new location with the provided details.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "internalName",
                                    "addressLine1",
                                    "postalCode",
                                    "city",
                                    "country",
                                    "businessEmail",
                                    "defaultLanguage",
                                    "isDefault",
                                    "placeId"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Pizza Online"
                                    },
                                    "internalName": {
                                        "type": "string",
                                        "example": "Pizza Online"
                                    },
                                    "addressLine1": {
                                        "type": "string",
                                        "example": "Haakim chowk, PIA Main Boulevard, Block D Phase 1 Johar Town, Lahore, 54770"
                                    },
                                    "postalCode": {
                                        "type": "string",
                                        "example": "54770"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Lahore"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Pakistan"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.facebook.com/pizzaonlinejohartown"
                                    },
                                    "externalReference": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "businessEmail": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "hamzaidrees@gmail.com"
                                    },
                                    "defaultLanguage": {
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "isDefault": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "openingDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-04-09"
                                    },
                                    "brandNames": {
                                        "type": "string",
                                        "description": "Comma-separated brand names",
                                        "example": "development, testing"
                                    },
                                    "placeId": {
                                        "type": "string",
                                        "example": "ChIJ2QeB5YMEGTkRYiR-zGw-Uoqp"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registered Successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Registered Successfully",
                                    "data": {
                                        "id": 1641,
                                        "name": "Pizza Online",
                                        "internalName": "Pizza Online",
                                        "addressLine1": "Haakim chowk, PIA Main Boulevard, Block D Phase 1 Johar Town, Lahore, 54770",
                                        "postalCode": "54770",
                                        "city": "Lahore",
                                        "country": "Pakistan",
                                        "telephone": "",
                                        "website": "https://www.facebook.com/pizzaonlinejohartown",
                                        "externalReference": "",
                                        "businessEmail": "hamzaidrees@gmail.com",
                                        "defaultLanguage": "en",
                                        "isDefault": true,
                                        "openingDate": "2025-04-09T00:00:00.000Z",
                                        "brandNames": "development, testing",
                                        "placeId": "ChIJ2QeB5YMEGTkRYiR-zGw-Uoqp",
                                        "reportingEnabled": "pending",
                                        "aiService": "openai",
                                        "status": "requested",
                                        "statusOfSentimentalAnalysis": "pending",
                                        "oldReviewsReplyStatus": "pending",
                                        "enableUberAll": "pending",
                                        "enableFacebook": true,
                                        "insightJobStatus": false,
                                        "isLodgingEnabled": true,
                                        "isFormitableEnabled": true,
                                        "state": "active",
                                        "deleteRequest": false,
                                        "brandNamesUpdated": false,
                                        "socialMediaSyncing": true,
                                        "enableReviewAgent": false,
                                        "soconnect_connectivity_status": false,
                                        "businessId": null,
                                        "companyId": 127,
                                        "createdAt": "2025-04-09T10:16:20.349Z",
                                        "updatedAt": "2025-04-09T10:16:20.349Z",
                                        "category": null,
                                        "googleCategory": null,
                                        "sentimentalAnalysisDone": false,
                                        "soConnectEmail": null,
                                        "addressLine2": null,
                                        "countryCode": null,
                                        "lastSave": null,
                                        "lastSynced": null,
                                        "comment": null,
                                        "timezone": null,
                                        "timeFrequency": null,
                                        "lat": null,
                                        "lng": null,
                                        "googleSearchInsight": null,
                                        "googleMapInsight": null,
                                        "perDayCount": 0,
                                        "deletedAt": null,
                                        "totalDaysForReplyReviews": 0,
                                        "totalReviewsToReply": 0,
                                        "reviewReplyJobThreshold": 0,
                                        "categoryChangeAt": null,
                                        "facebookCategoryChangedAt": null,
                                        "subscriptionDate": null,
                                        "reviewReplyStartDate": null,
                                        "dealLink": null,
                                        "dealValue": 0,
                                        "comments": null,
                                        "accountOwnerName": null,
                                        "profileCompletition": 0,
                                        "industry": null,
                                        "deleteRequestBy": null,
                                        "requestedUserEmotionAI": null
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Place Id is required"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal server error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/googleLinked": {
            "get": {
                "summary": "Get Google-linked locations",
                "description": "Fetch locations that have linked Google accounts.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The page number for pagination."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of results per page."
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Column name to order by (e.g., \"id\")."
                    },
                    {
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "description": "Sorting order (ASC or DESC)."
                    },
                    {
                        "in": "query",
                        "name": "companyId",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter locations by company ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved Google-linked locations.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "rows": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1608
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Hotel The Fame 1"
                                                            },
                                                            "category": {
                                                                "type": "string",
                                                                "example": "Restaurant"
                                                            },
                                                            "businessEmail": {
                                                                "type": "string",
                                                                "example": "kumail@gsoftconsulting.com"
                                                            },
                                                            "addressLine1": {
                                                                "type": "string",
                                                                "example": "J3, Plot 29 Floor 2nd, Block Johar, Town, Lahore"
                                                            },
                                                            "city": {
                                                                "type": "string",
                                                                "example": "Lahore"
                                                            },
                                                            "country": {
                                                                "type": "string",
                                                                "example": "Pakistan"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "approved"
                                                            },
                                                            "socialLink": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 125588
                                                                        },
                                                                        "email": {
                                                                            "type": "string",
                                                                            "example": "qaobenan@gmail.com"
                                                                        },
                                                                        "isConnected": {
                                                                            "type": "boolean",
                                                                            "example": true
                                                                        },
                                                                        "type": {
                                                                            "type": "string",
                                                                            "example": "google"
                                                                        },
                                                                        "isActive": {
                                                                            "type": "boolean",
                                                                            "example": true
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Invalid request"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this resource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/status": {
            "get": {
                "summary": "Get company locations with review status",
                "description": "Returns all approved locations of a company, indicating whether each location has an associated review and whether it is the default location.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "companyId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the company to fetch locations for."
                    },
                    {
                        "in": "query",
                        "name": "country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "comma-separated countries"
                    },
                    {
                        "in": "query",
                        "name": "city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "comma-separated cities"
                    },
                    {
                        "in": "query",
                        "name": "groups",
                        "schema": {
                            "type": "string"
                        },
                        "descripton": "comma-separated groups"
                    },
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The page number for pagination."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of records per page."
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Column to sort by (e.g., createdAt)."
                    },
                    {
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "description": "Sorting order (ASC or DESC)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved locations with review status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Location 1"
                                                    },
                                                    "addressLine1": {
                                                        "type": "string",
                                                        "example": "123 Main Street"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "Lahore"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "Pakistan"
                                                    },
                                                    "defaultLocationId": {
                                                        "type": "integer",
                                                        "nullable": true,
                                                        "example": 101
                                                    },
                                                    "reviewFoundStatus": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Invalid request"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this resource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No locations found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No locations found with this company ID"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/{id}/reviewSources": {
            "get": {
                "summary": "Get review sources for a location",
                "description": "Fetches a list of review sources associated with a specific location.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the location."
                    },
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The page number for pagination."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of records per page."
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The column to order by (e.g., \"id\")."
                    },
                    {
                        "in": "query",
                        "name": "orderBy",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "description": "The sorting order (ASC or DESC)."
                    },
                    {
                        "in": "query",
                        "name": "companyId",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The Id of the company"
                    },
                    {
                        "in": "query",
                        "name": "sourceId",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The Id of the source"
                    },
                    {
                        "in": "query",
                        "name": "isActive",
                        "schema": {
                            "type": "boolean",
                            "enum": [
                                true,
                                false
                            ]
                        },
                        "description": "Filter by active status."
                    },
                    {
                        "in": "query",
                        "name": "enableReviewAgent",
                        "schema": {
                            "type": "boolean",
                            "enum": [
                                true,
                                false
                            ]
                        },
                        "description": "Filter by review agent status."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "open",
                                "pending",
                                "done",
                                "failed",
                                "exception"
                            ]
                        },
                        "description": "Filter by review source status."
                    },
                    {
                        "in": "query",
                        "name": "connected",
                        "schema": {
                            "type": "boolean",
                            "enum": [
                                true,
                                false
                            ]
                        },
                        "description": "Filter by connected status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved review sources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "rows": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 87
                                                            },
                                                            "placeId": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "example": null
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://www.airbnb.com/rooms/43573478"
                                                            },
                                                            "reviewCount": {
                                                                "type": "integer",
                                                                "nullable": true,
                                                                "example": null
                                                            },
                                                            "averageRating": {
                                                                "type": "number",
                                                                "nullable": true,
                                                                "example": null
                                                            },
                                                            "lastJobId": {
                                                                "type": "string",
                                                                "example": "780460810"
                                                            },
                                                            "lastJobDate": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "format": "date-time",
                                                                "example": null
                                                            },
                                                            "isActive": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "deletedAt": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "example": null
                                                            },
                                                            "enableReviewAgent": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "sessionError": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "done"
                                                            },
                                                            "locationIdentifier": {
                                                                "type": "string",
                                                                "nullable": true,
                                                                "example": null
                                                            },
                                                            "locationId": {
                                                                "type": "integer",
                                                                "example": 1602
                                                            },
                                                            "companyId": {
                                                                "type": "integer",
                                                                "example": 127
                                                            },
                                                            "sourceId": {
                                                                "type": "integer",
                                                                "example": 4
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-10-15T09:30:29.547Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-12T03:07:58.135Z"
                                                            },
                                                            "thirdPartyReviewSource": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 4
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "airbnb"
                                                                    },
                                                                    "image": {
                                                                        "type": "string",
                                                                        "example": "assets/static/review_source/airbnb.png"
                                                                    },
                                                                    "displayName": {
                                                                        "type": "string",
                                                                        "example": "Airbnb"
                                                                    },
                                                                    "isActive": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    },
                                                                    "mostly_used": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "example": null
                                                                    },
                                                                    "priority": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "example": null
                                                                    },
                                                                    "deletedAt": {
                                                                        "type": "string",
                                                                        "nullable": true,
                                                                        "example": null
                                                                    },
                                                                    "createdAt": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2022-09-22T15:10:25.484Z"
                                                                    },
                                                                    "updatedAt": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2022-09-22T15:10:25.484Z"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Data not found"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location was found with this ID"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have the access to this location"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/{id}/actionPlans": {
            "get": {
                "summary": "Get Action Plans for a Location",
                "description": "Fetches a list of action plans associated with a specific location ID.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the location for which to retrieve action plans."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved action plans for the location.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Action Plans Found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "actionPlanId": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Improve Staff Training"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "In Progress"
                                                    },
                                                    "dueDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-30T00:00:00.000Z"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location was found with this ID"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this resource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/{id}/summrayReviews": {
            "get": {
                "summary": "Get Action Plans for a Location",
                "description": "Fetches a list of action plans associated with a specific location ID.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the location for which to retrieve action plans."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved action plans for the location.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Action Plans Found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "actionPlanId": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Improve Staff Training"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "In Progress"
                                                    },
                                                    "dueDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-30T00:00:00.000Z"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location was found with this ID"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this resource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "summary": "Get Location Details by ID",
                "description": "Fetches detailed information about a specific location by its ID.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the location to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved location details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1608
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Hotel The Fame 1"
                                                },
                                                "internalName": {
                                                    "type": "string",
                                                    "example": "Hotel The Fame 1"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Restaurant"
                                                },
                                                "googleCategory": {
                                                    "type": "string",
                                                    "example": "categories/gcid:restaurant"
                                                },
                                                "businessEmail": {
                                                    "type": "string",
                                                    "example": "kumail@gsoftconsulting.com"
                                                },
                                                "sentimentalAnalysisDone": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "addressLine1": {
                                                    "type": "string",
                                                    "example": "J3, Plot 29 Floor 2nd, Block Johar, Town, Lahore"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Lahore"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Pakistan"
                                                },
                                                "countryCode": {
                                                    "type": "string",
                                                    "example": "PK"
                                                },
                                                "telephone": {
                                                    "type": "string",
                                                    "example": "+92 347 5484583"
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "example": "http://www.hotelthefame.com/"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "approved"
                                                },
                                                "lat": {
                                                    "type": "string",
                                                    "example": "31.46599230000001"
                                                },
                                                "lng": {
                                                    "type": "string",
                                                    "example": "74.2579605"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-06T06:24:21.006Z"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-07T05:29:54.705Z"
                                                },
                                                "socialLink": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 125588
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "qaobenan@gmail.com"
                                                            },
                                                            "isConnected": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "google"
                                                            },
                                                            "referenceId": {
                                                                "type": "string",
                                                                "example": "915341714050145449"
                                                            },
                                                            "statusOfGoogleInsight": {
                                                                "type": "string",
                                                                "example": "Done"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-06T06:26:49.726Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-06T06:31:09.100Z"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location was found with this ID"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to this resource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a location",
                "description": "Deletes a location based on the provided `id`.\n- If `finalDelete=true`, the location is permanently deleted (only `superAdmin` can do this).\n- If `finalDelete=reject`, the delete request is rejected.\n- If `finalDelete` is not provided, a delete request is submitted to the admin.\n",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the location to delete."
                    },
                    {
                        "in": "query",
                        "name": "finalDelete",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "reject"
                            ]
                        },
                        "description": "- `\"true\"` → Permanently deletes the location (Super Admin only).\n- `\"reject\"` → Rejects the delete request.\n- If omitted, a delete request is submitted to the admin.\n"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully processed the delete request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete Request Submitted to admin"
                                        },
                                        "data": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location was found with this ID"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have the access to this location"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a location",
                "description": "Updates the details of an existing location by its ID.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID of the location to update",
                        "example": 1641
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Pizza"
                                    },
                                    "internalName": {
                                        "type": "string",
                                        "example": "Pizza"
                                    },
                                    "addressLine1": {
                                        "type": "string",
                                        "example": "Haakim chowk, PIA Main Boulevard, Block D Phase 1 Johar Town, Lahore, 54770"
                                    },
                                    "postalCode": {
                                        "type": "string",
                                        "example": "54770"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Lahore"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Pakistan"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://www.facebook.com/pizzaonlinejohartown"
                                    },
                                    "externalReference": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "businessEmail": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "hamzaidrees@gmail.com"
                                    },
                                    "defaultLanguage": {
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "isDefault": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "openingDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-04-09"
                                    },
                                    "brandNames": {
                                        "type": "string",
                                        "example": "development, testing"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "requested"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Success",
                                    "data": {
                                        "id": 1641,
                                        "name": "Pizza",
                                        "internalName": "Pizza",
                                        "category": null,
                                        "googleCategory": null,
                                        "businessEmail": "hamzaidrees@gmail.com",
                                        "sentimentalAnalysisDone": false,
                                        "soconnect_connectivity_status": false,
                                        "soConnectEmail": null,
                                        "addressLine1": "Haakim chowk, PIA Main Boulevard, Block D Phase 1 Johar Town, Lahore, 54770",
                                        "reportingEnabled": "pending",
                                        "addressLine2": null,
                                        "postalCode": "54770",
                                        "city": "Lahore",
                                        "country": "Pakistan",
                                        "countryCode": null,
                                        "telephone": "",
                                        "website": "https://www.facebook.com/pizzaonlinejohartown",
                                        "externalReference": "",
                                        "placeId": "ChIJ2QeB5YMEGTkRYiR-zGw-Uoqp",
                                        "lastSave": null,
                                        "lastSynced": null,
                                        "comment": null,
                                        "businessId": null,
                                        "timezone": null,
                                        "defaultLanguage": "en",
                                        "aiService": "openai",
                                        "timeFrequency": null,
                                        "lat": null,
                                        "lng": null,
                                        "googleSearchInsight": null,
                                        "googleMapInsight": null,
                                        "perDayCount": 0,
                                        "deletedAt": null,
                                        "status": "requested",
                                        "statusOfSentimentalAnalysis": "pending",
                                        "oldReviewsReplyStatus": "pending",
                                        "enableUberAll": "pending",
                                        "enableFacebook": true,
                                        "insightJobStatus": false,
                                        "isLodgingEnabled": true,
                                        "isFormitableEnabled": true,
                                        "state": "active",
                                        "totalDaysForReplyReviews": 0,
                                        "totalReviewsToReply": 0,
                                        "reviewReplyJobThreshold": 0,
                                        "categoryChangeAt": null,
                                        "facebookCategoryChangedAt": null,
                                        "subscriptionDate": null,
                                        "reviewReplyStartDate": null,
                                        "dealLink": null,
                                        "dealValue": 0,
                                        "comments": null,
                                        "accountOwnerName": null,
                                        "profileCompletition": 0,
                                        "industry": null,
                                        "deleteRequest": false,
                                        "deleteRequestBy": null,
                                        "brandNames": "development, testing",
                                        "brandNamesUpdated": false,
                                        "socialMediaSyncing": true,
                                        "enableReviewAgent": false,
                                        "openingDate": "2025-04-09T00:00:00.000Z",
                                        "requestedUserEmotionAI": null,
                                        "companyId": 127,
                                        "createdAt": "2025-04-09T10:16:20.349Z",
                                        "updatedAt": "2025-04-09T10:18:53.338Z"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location was found with this ID"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Something went wrong"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/emails": {
            "patch": {
                "summary": "Update business email for multiple locations",
                "description": "Update the business email for multiple locations, where each location can have multiple locationIds.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "locations": {
                                        "type": "array",
                                        "description": "Array of location objects where each object contains an array of locationIds and a businessEmail to be updated.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    },
                                                    "description": "An array of locationIds for which the business email should be updated.",
                                                    "example": [
                                                        1608,
                                                        1579
                                                    ]
                                                },
                                                "businessEmail": {
                                                    "type": "string",
                                                    "description": "The business email address to be updated for the given locationIds.",
                                                    "example": "saim@gmail.com"
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "locations": [
                                        {
                                            "id": [
                                                1608,
                                                1579
                                            ],
                                            "businessEmail": "saim@gmail.com"
                                        },
                                        {
                                            "id": [
                                                1607,
                                                1602
                                            ],
                                            "businessEmail": "uzair@gmail.com"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the business emails for the provided locations.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Updated Successfully",
                                    "data": [
                                        {
                                            "status": "fulfilled",
                                            "value": true
                                        },
                                        {
                                            "status": "fulfilled",
                                            "value": true
                                        },
                                        {
                                            "status": "fulfilled",
                                            "value": true
                                        },
                                        {
                                            "status": "fulfilled",
                                            "value": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or missing locationId(s).",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Update unsuccessful",
                                    "data": null
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden to one or more locations.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You do not have access to one or more of the locations",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Error",
                                    "data": null
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/{id}/sync": {
            "patch": {
                "summary": "Location Sync",
                "description": "Sync location with Google, Facebook and Uberall.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the location to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "syncGoogle": {
                                        "type": "boolean",
                                        "description": "The syncGoogle is used to bypass the google sync and sync for all other directories.",
                                        "example": true
                                    },
                                    "autoSync": {
                                        "type": "boolean",
                                        "description": "The Auto Sync is used to bypass the google sync and sync for all other directories.",
                                        "example": true
                                    },
                                    "bypassGoogle": {
                                        "type": "boolean",
                                        "description": "The bypassGoogle is used to bypass the google sync and sync for all other directories.",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Success",
                                    "data": {
                                        "_id": "63f5ecc1ef8446ceae8cef74",
                                        "locationId": "1293"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location found with this id",
                                    "data": null
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/locations/defaultLocation/{id}": {
            "patch": {
                "summary": "Set default location",
                "description": "Updates the specified location to be the default one for the company.",
                "tags": [
                    "Locations"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ID of the location to set as default",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1643
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default location updated",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": true,
                                    "message": "Default location updated",
                                    "data": null
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "No location was found with this ID"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You are not authorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "You did not have access to this location",
                                    "data": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": false,
                                    "message": "Internal Server Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}